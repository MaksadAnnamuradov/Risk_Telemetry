@page "/PlayByPlay"
@using Risk.Shared
@model Visualizer.Pages.PlayByPlayModeModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = "PlayByPlay";
}

<html xmlns="http://www.w3.org/1999/xhtml">
<head>

    <link rel="stylesheet" href="path/to/font-awesome/css/font-awesome.min.css">

    <title>
        PlayByPlay
    </title>
</head>
<body>



    <style>
        .location {
            font-size: 10pt;
            width: 48%;
            float: left;
        }

        .name {
            font-size: 14pt;
            color: blue
        }

        .armies {
            color: red;
            font-weight: bold;
            width: 48%;
            float: right;
            text-align: right;
        }

        .cell {
            min-width: 25px;
        }
    </style>

    <h2>Game State: @Model.CurrentStatus.GameState</h2>



    <form method="post" asp-page-handler="PlayByPlay">
        <button class="back-end" name="action" type="submit" value="backwardStart">Backward till start</button>
        <button class="back-one" name="action" type="submit" value="backwardOne">Backward 1 step</button>
        <button class="forw-one" name="action" type="submit" value="forwardOne">Forward 1</button>
        <button class="forw-end" name="action" type="submit" value="forwardEnd">Forward till end</button>

    </form>

    <br />
    <br />


    <form method="get">
        <button type="submit" asp-page="./Visualizer">Back to Visualizer</button>
    </form>


    <!--Player Stats-->

    <div class="playerStats">
        <table cellpadding="2px, 10px">
            <thead>
            <td>Player Name</td>
            <td>Territories</td>
            <td>Armies</td>
            <td>ContinentBonus</td>
            <td>FinalScore</td>
            </tr>
            @foreach (var p in Model.CurrentStatus.PlayerStats.OrderByDescending(p => p.Score))
            {
                <tr>
                    <td>@p.Name</td>
                    <td>@p.Territories</td>
                    <td>@p.Armies</td>
                    <td>@p.ContinentBonus</td>
                    <td>@p.Score</td>
                </tr>
            }
        </table>
    </div>

    <div>
        <h3>@Model.CurrentStatus.PlayerActionDescription</h3>
    </div>
    <!--Player Table Grid-->

<div class="grid-container">
    <table border="1px" cellpadding="10px">
        @for (var row = 0; row <= Model.MaxRow; row++)
        {
        <tr>
            @for (var col = 0; col <= Model.MaxCol; col++)
            {
                var cell = Model.Status.Board.First(t => t.Location == new Location(row, col));
                var style =  string.IsNullOrEmpty(cell.OwnerName)
                    ? string.Empty
                    : $"style=background-color:{Html.Raw(Model.ColorGenerator.GetColor(cell.OwnerName))}";
                
                <td class="cell" @style>
                    <div class="location">@cell.Location</div>
                    <div class="armies">@cell.Armies</div>
                    <div class="name">@cell.OwnerName</div>
                </td>
            }
        </tr>
        }
    </table>
</div>


</body>
</html>